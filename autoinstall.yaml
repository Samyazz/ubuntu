#cloud-config
autoinstall:
  version: 1
  
  # Locale and keyboard
  locale: en_US.UTF-8
  keyboard:
    layout: us
    variant: ''
  
  # Network configuration - disable IPv6
  network:
    version: 2
    ethernets:
      eno1:
        dhcp4: true
        dhcp6: false
  
  # Kernel selection - 6.11 HWE kernel
  kernel:
    flavor: hwe
  
  # Enable third-party software and drivers
  drivers:
    install: true
  
  # Third-party software repositories
  apt:
    sources:
      multiverse:
        source: "deb http://archive.ubuntu.com/ubuntu $RELEASE multiverse"
      multiverse-updates:
        source: "deb http://archive.ubuntu.com/ubuntu $RELEASE-updates multiverse"
  
  # Storage configuration - single disk with LVM, ready for post-install mirroring
  storage:
    config:
      # Primary NVMe disk (nvme1n1 left untouched for later mirroring)
      - type: disk
        id: disk0
        path: /dev/nvme0n1
        wipe: superblock-recursive
        preserve: false
        grub_device: true
      
      # EFI system partition (512MB)
      - type: partition
        id: efi_partition
        device: disk0
        size: 512M
        flag: boot
        preserve: false
      
      # LVM partition (remaining space - boot will be on LVM)
      - type: partition
        id: lvm_partition
        device: disk0
        size: -1
        preserve: false
      
      # LVM volume group
      - type: lvm_volgroup
        id: vg0
        name: ubuntu-vg
        devices:
          - lvm_partition
        preserve: false
      
      # Boot logical volume (4GB)
      - type: lvm_partition
        id: lv_boot
        name: boot
        volgroup: vg0
        size: 4G
        preserve: false
      
      # Root logical volume (1TB)
      - type: lvm_partition
        id: lv_root
        name: root
        volgroup: vg0
        size: 1T
        preserve: false
      
      # Format EFI partition
      - type: format
        id: efi_format
        volume: efi_partition
        fstype: fat32
        preserve: false
      
      # Format boot LV
      - type: format
        id: boot_format
        volume: lv_boot
        fstype: ext4
        preserve: false
      
      # Format root LV
      - type: format
        id: root_format
        volume: lv_root
        fstype: ext4
        preserve: false
      
      # Mount points
      - type: mount
        id: efi_mount
        device: efi_format
        path: /boot/efi
      
      - type: mount
        id: boot_mount
        device: boot_format
        path: /boot
      
      - type: mount
        id: root_mount
        device: root_format
        path: /
  
  # User configuration
  identity:
    hostname: ubuntu-desktop
    username: ubuntu
    # Generate with: openssl passwd -6 adm.Test (generates random salt automatically)
    password: '$6$salt$LgUFV8K47KGR3Wt.L/vE6/8nJa1z2Vz9mGzh5aB3c4F6Pt0rS8Nw2x1B9Ml4K6V8J2H3G5pQ7t4R6S1u3W5y9.'
    realname: Ubuntu User
  
  # SSH configuration
  ssh:
    install-server: true
    allow-pw: true
    authorized-keys: []
      # Add your SSH public keys here if needed
      # - "ssh-rsa AAAAB3NzaC1yc2E... user@host"
  
  # Package selection including third-party software
  packages:
    - openssh-server
    - curl
    - wget
    - vim
    - htop
    - lvm2
    - ubuntu-restricted-extras  # Third-party codecs and fonts
    - ubuntu-drivers-common     # Driver management tools
    - linux-firmware           # Additional firmware
  
  # Updates and upgrades
  updates: security
  
  # Late commands for final configuration
  late-commands:
    # Install and configure additional drivers automatically
    - curtin in-target --target=/target -- ubuntu-drivers autoinstall
    # Update GRUB for UEFI setup
    - curtin in-target --target=/target -- update-grub
    # Update initramfs
    - curtin in-target --target=/target -- update-initramfs -u
    # Disable IPv6 permanently in sysctl
    - curtin in-target --target=/target -- sh -c 'echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf'
    - curtin in-target --target=/target -- sh -c 'echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf'
    - curtin in-target --target=/target -- sh -c 'echo "net.ipv6.conf.lo.disable_ipv6 = 1" >> /etc/sysctl.conf'
    # Add IPv6 disable to GRUB kernel parameters
    - curtin in-target --target=/target -- sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="[^"]*/& ipv6.disable=1/' /etc/default/grub
    - curtin in-target --target=/target -- update-grub
    # Create script for post-installation LVM mirroring setup
    - curtin in-target --target=/target -- sh -c 'cat > /home/ubuntu/setup-lvm-mirror.sh << "EOF"
#!/bin/bash
# Post-installation LVM mirroring setup script
# Run this after installation to set up redundancy with /dev/nvme1n1

echo "=== LVM Mirroring Setup Script ==="
echo "This will set up LVM mirroring using /dev/nvme1n1"
echo "WARNING: This will wipe /dev/nvme1n1 completely!"
echo ""
read -p "Continue? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Aborted."
    exit 1
fi

echo "Step 1: Preparing /dev/nvme1n1..."
sudo wipefs -a /dev/nvme1n1

echo "Step 2: Creating partitions on /dev/nvme1n1..."
# Create EFI partition (512MB)
sudo parted /dev/nvme1n1 --script mklabel gpt
sudo parted /dev/nvme1n1 --script mkpart primary fat32 1MiB 513MiB
sudo parted /dev/nvme1n1 --script set 1 esp on
# Create LVM partition (rest of disk)
sudo parted /dev/nvme1n1 --script mkpart primary 513MiB 100%

echo "Step 3: Setting up EFI redundancy..."
sudo mkfs.fat -F32 /dev/nvme1n1p1
sudo mkdir -p /tmp/efi-backup /tmp/efi-new
sudo mount /dev/nvme0n1p1 /tmp/efi-backup
sudo mount /dev/nvme1n1p1 /tmp/efi-new
sudo cp -a /tmp/efi-backup/* /tmp/efi-new/
sudo umount /tmp/efi-backup /tmp/efi-new

echo "Step 4: Installing GRUB on second drive..."
sudo grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ubuntu /dev/nvme1n1

echo "Step 5: Adding /dev/nvme1n1p2 to LVM..."
sudo pvcreate /dev/nvme1n1p2
sudo vgextend ubuntu-vg /dev/nvme1n1p2

echo "Step 6: Converting LVs to RAID1 mirrors..."
echo "Converting boot volume..."
sudo lvconvert --type raid1 -m1 ubuntu-vg/boot /dev/nvme1n1p2
echo "Converting root volume..."
sudo lvconvert --type raid1 -m1 ubuntu-vg/root

echo "Step 7: Boot mirroring complete (boot is on LVM)..."

echo ""
echo "=== LVM Mirroring Setup Complete! ==="
echo "Your system now has full hardware redundancy."
echo "Both drives can boot independently if one fails."
echo "Boot and root are both mirrored on LVM."
echo ""
echo "Check RAID status with:"
echo "  sudo lvs -a -o +devices"
echo "  sudo pvs"
EOF'
    # Make the script executable
    - curtin in-target --target=/target -- chmod +x /home/ubuntu/setup-lvm-mirror.sh
    - curtin in-target --target=/target -- chown ubuntu:ubuntu /home/ubuntu/setup-lvm-mirror.sh
  
  # Reboot after installation
  shutdown: reboot
